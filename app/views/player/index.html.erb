<!DOCTYPE html>
<html>
  <body>
    <%= form_tag({controller: "player", action: "index"}, method: "get") do %>
      <%= label_tag(:blog_url, "blog url:") %>
      <%= text_field_tag(:blog_url) %>
      <%= submit_tag("Search") %>
    <% end %>

    <% if @blog_url %>
      <% ids = Collector.new(@blog_url).ids %>
      <% ids && ids.reverse! %>
    <% end %>

    <div id="player"></div>

    <%= javascript_tag do %>
      var videos = <%= raw ids.to_json %>;
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        playNextVideo(event)
      }

      function onPlayerStateChange(event) {
        if (event.data == 0)  {
          playNextVideo(event)
        }
      }

      function playNextVideo(event) {
        if (videos.length > 0) {
          var video = videos.pop();
          event.target.cueVideoById(video);
          event.target.playVideo();
        }
      }
    <% end %>
  </body>
</html>
